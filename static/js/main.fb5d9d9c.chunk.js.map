{"version":3,"sources":["container/Header.js","container/ImageContainer.js","container/GiphContainer.js","container/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","onSub","useState","text","settext","className","onSubmit","e","preventDefault","alert","type","id","placeholder","value","onChange","target","ImageContainer","src","title","isLoaded","setIsLoaded","useEffect","css","height","width","style","display","textAlign","position","alignSelf","onLoad","size","GiphContainer","data","arr","isloaded","mySetIsloaded","groups","map","i","slice","filter","console","log","group","index0","obj","index","images","original","url","Footer","postsPerPage","totalPosts","paginate","pageNumbers","Math","ceil","push","number","onClick","href","App","setIsloaded","setdata","postPerPage","currentPage","setCurrentPage","override","a","axios","get","params","q","api_key","then","res","data1","mergeWithPrevData","Object","entries","catch","err","indexOfLastGiph","indexOfFirstGiph","currentGiphs","length","pageNumber","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb5d9d9c.chunk.js","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nconst Header = ({ onSub }) => {\n  const [text, settext] = useState(\"\");\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (text === \"\") {\n      alert(\"Please fill the text\");\n      return;\n    }\n    onSub(text);\n    settext(\"\");\n  };\n\n  return (\n    <div className=\"my-container\">\n      <h1>Giphy App </h1>\n      <form className=\"form-group\" onSubmit={onSubmit}>\n        <div className=\"mb-3 m-4 \">\n          <input\n            type=\"text\"\n            className=\" form-control \"\n            id=\"text\"\n            placeholder=\"Giphy Name\"\n            value={text}\n            onChange={(e) => {\n              settext(e.target.value);\n            }}\n          ></input>\n\n          <button type=\"submit\" className=\"btn btn-primary m-2\">\n            search\n          </button>\n        </div>\n      </form>\n      <button className=\"btn btn-danger m-2 \">Clear Giphs</button>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { css } from \"@emotion/react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nconst ImageContainer = ({ src, title }) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const loaded = () => {\n    setIsLoaded(true);\n  };\n  useEffect(() => {\n    return () => {\n      setIsLoaded(false);\n    };\n  }, [src]);\n  const override = css`\n    display: block;\n    margin: 0 auto;\n    border-color: gray;\n  `;\n  return (\n    <div className=\"col-sm\">\n      <figure className=\"fig\">\n        <img\n          src={src}\n          height=\"200\"\n          width=\"250\"\n          style={{\n            display: isLoaded ? \"inline-block\" : \"none\",\n            textAlign: \"center\",\n            position: \"relative\",\n            alignSelf: \"center\",\n          }}\n          onLoad={() => {\n            loaded();\n          }}\n        />\n        {!isLoaded && <ClipLoader size={150} />}\n\n        <figcaption className=\"figCap\">{title}</figcaption>\n      </figure>\n    </div>\n  );\n};\n\nexport default ImageContainer;\n","import React, { useReducer } from \"react\";\nimport ImageContainer from \"./ImageContainer\";\nimport { useState, useEffect } from \"react\";\nimport { css } from \"@emotion/react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nconst GiphContainer = ({ data, isloaded, mySetIsloaded }) => {\n  const chunkSize = 3;\n  const arr = data;\n\n  const groups = arr\n    .map((e, i) => {\n      return i % chunkSize === 0 ? arr.slice(i, i + chunkSize) : null;\n    })\n    .filter((e) => {\n      return e;\n    });\n\n  useEffect(() => {\n    // effect\n    return () => {\n      console.log(\"render from Giph\");\n    };\n  }, []);\n\n  return (\n    <>\n      <div className={\"container\"}>\n        {groups.map((group, index0) => {\n          return (\n            <div key={index0} className={\"row\"}>\n              {group.map((obj, index) => {\n                // console.log(obj[1]);\n                return (\n                  <ImageContainer\n                    key={index}\n                    src={obj[1].images.original.url}\n                    title={obj[1].title}\n                  />\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default GiphContainer;\n","import React from \"react\";\n\nconst Footer = ({ postsPerPage, totalPosts, paginate }) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n  return (\n    <nav className=\"pagination\">\n      <ul>\n        {pageNumbers.map((number) => (\n          <li key={number} className=\"pagnition-item\">\n            <a onClick={() => paginate(number)} href=\"#\">\n              {number}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Footer;\n","import Header from \"./container/Header\";\nimport { useState, useEffect } from \"react\";\nimport GiphContainer from \"./container/GiphContainer\";\nimport axios from \"axios\";\nimport { css } from \"@emotion/react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport Footer from \"./container/Footer\";\n\nfunction App() {\n  // true when data is fetched elese false\n  const [isloaded, setIsloaded] = useState(false);\n  const [paginateSize, setPaginateSize] = useState(10);\n  // const [paginateIndex, setpaginateIndex] = useState(10);\n  const [data, setdata] = useState([]);\n  const [paginateData, setpaginateData] = useState([]);\n  const [postPerPage, setPostPerPage] = useState(6);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  useEffect(() => {\n    // effect\n    return () => {\n      console.log(\"render\");\n    };\n  }, [currentPage]);\n\n  //css for loader\n  const override = css`\n    display: block;\n    margin: 0 auto;\n    border-color: gray;\n  `;\n\n  //trigger when user search and included fetch api call fro fetching data\n  const onSubmit = async (text) => {\n    setIsloaded(false);\n\n    // http://api.giphy.com/v1/gifs/search?q=hilarious&api_key=dc6zaTOxFJmzC\n    axios\n      .get(`http://api.giphy.com/v1/gifs/search`, {\n        params: {\n          q: { text },\n          api_key: \"dc6zaTOxFJmzC\",\n        },\n      })\n      .then((res) => {\n        // console.log(\"then\");\n        const data1 = res.data;\n        //data is added at the first of of the previouse data\n        // console.log([...Object.entries(data1.data), ...data]);\n        const mergeWithPrevData = [\n          ...Object.entries(data1.data).slice(0, 12),\n          ...data,\n        ];\n\n        setdata(mergeWithPrevData);\n\n        setIsloaded(true);\n      })\n      .catch((err) => {\n        console.log(\"Connot access\");\n      });\n    console.log(data);\n  };\n\n  //Get the current Posts\n  const indexOfLastGiph = currentPage * postPerPage;\n  const indexOfFirstGiph = indexOfLastGiph - postPerPage;\n  const currentGiphs = data.slice(indexOfFirstGiph, indexOfLastGiph);\n\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n  return (\n    <>\n      <Header onSub={onSubmit} />\n      {currentGiphs.length > 0 &&\n        (isloaded ? (\n          <>\n            <GiphContainer data={currentGiphs} isloaded={isloaded} />\n            <Footer\n              totalPosts={data.length}\n              postsPerPage={postPerPage}\n              paginate={paginate}\n            />\n          </>\n        ) : (\n          <ClipLoader css={override} size={150} />\n        ))}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport reportWebVitals from \"./reportWebVitals\";\nimport Header from \"./container/Header\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}